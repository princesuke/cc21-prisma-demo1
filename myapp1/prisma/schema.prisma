// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Classroom {
  id         Int       @id @default(autoincrement())
  name       String
  gradeLevel Int
  students   Student[]
}

//lab 3
model Product {
  id    Int         @id @default(autoincrement())
  name  String
  price Float
  stock Int
  items OrderItem[]
}

model OrderItem {
  id          Int     @id @default(autoincrement())
  orderId     Int
  productId   Int
  quantity    Int
  priceAtTime Float
  Product     Product @relation(fields: [productId], references: [id])
}

model Order {
  id        Int      @id @default(autoincrement())
  orderDate DateTime
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

//lab4
model Author {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[]
}

model Book {
  id       Int     @id @default(autoincrement())
  title    String
  Author   Author? @relation(fields: [authorId], references: [id])
  authorId Int?
}

model Student {
  id          Int               @id @default(autoincrement())
  name        String
  email       String            @unique
  classroom   Classroom         @relation(fields: [classroomId], references: [id])
  classroomId Int
  activities  StudentActivity[]
}

enum ActivityType {
  SPORT
  CULTUE
  ACADEMIC
}

model Activity {
  id           Int               @id @default(autoincrement())
  title        String
  type         ActivityType
  participants StudentActivity[]
}

model StudentActivity {
  id         Int       @id @default(autoincrement())
  joinDate   DateTime  @default(now())
  Activity   Activity? @relation(fields: [activityId], references: [id])
  activityId Int?
  Student    Student?  @relation(fields: [studentId], references: [id])
  studentId  Int?
}

//lab6

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  email     String    @unique
  name      String?
  posts     Post[]
  orders    Order[]
  comments  Comment[]
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String?
  published Boolean   @default(false)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Comment[]
}

model Comment {
  id              Int       @id @default(autoincrement())
  text            String
  replies         Comment[] @relation("CommentReplies")
  parentComment   Comment?  @relation("CommentReplies", fields: [parentCommentId], references: [id])
  parentCommentId Int?
  User            User?     @relation(fields: [userId], references: [id])
  userId          Int?
  Post            Post?     @relation(fields: [postId], references: [id])
  postId          Int?
}
